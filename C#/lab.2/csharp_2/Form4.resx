<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5KmWdcp9alHWdg2+axRBuK5Ga9COtAc79MK63pF5qnWd1v1K1jH6m/6eWaRahOsow+qL9sNrT8prHJU3
        7qzVup+qHVPbllGkWoTrKIPqz9ETr70pr29E3rqzXut+qnZMbVtGkWoRrqMMql9Hb7z1qLyu3nnLWvOI
        pdx+tl9Jj1HH763rRBepHuE6yqD6pw+Qh16V19MzPVjrfnLG2reMxdpPgx+RahKqq5EaE532anW/ymvp
        mbesNY+cOdtHfy+3Hcp9juBXpLqE6mykxmSg/VrZN+s6euapcg39+/jtjLW99fjW/bKKVJtQ3Y3UmEy0
        byv6Z53/Tc7WvKs8Vv8+frurxxrZRapfqAmI1JiMtH8ze1ie901KV9vPnB1z9nsrPf7pGtlFql+oCYjU
        mMy0jzP6aZ3vaSwt+5TO9r27TkmPf7pGdpHqF2oCIjUmO+3l6J5a57qbFq371/bTbdb2K2+Px48o9Qs1
        AQx1PEdPR/a2PMfdtGo9RvdribJ+U3pcbT/URalfqAlgqOM6ejuiv7r23dzVcqzu0xJl/ab0uNp+qItS
        v1ATwFDHdvRX08PZutbvZZ54c7weWx5f23Zo2QfXotQw1AQw1Dnow9ej3+V6rXnqzRp6rHV86zZrO9pF
        qWGoKWCwczn6rXnCWucqb91dR89t5WD99qG/l9twX5RahpmEKA3BPdr3p/231qilh7tr6fmtKGu7Bu9F
        qWeYaYjSEDynM3BnDsrjaullxJqYK0L/wkwfDxR0Bu7MgnWclZ5GrYt5evRv9QyEmb6jkCuLCT90Hs5m
        otynlt5GrYt5evXwWKfMDGEmcHbh4J/OhDUX5faz9DZybczTq4c6D2VGCzOBM4uGvehsWPNRbteMMHp9
        jNezh7pWLSOEmcDRhcLedD7KOaltG2HWeTBOzx7qWq3pJcwEjigO4tE5qWWk2nlq267cOa7c7+k577DW
        f3rOt9f79l6P899dx9pf13qSN94d3dHbG3t6/N3jyu3H31fHHXT/MjXW/kdqju3lMcfvJWu/s9zd/0h5
        3PH38c+zKGv7yKw4JyF38sSzo/5lXQQhhJD5eYIPwKZR1vazHPsf/2yNxdrviLL+bknJ2qdMjbW/FYu1
        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
        lDd1vgHFAAAAAElFTkSuQmCC
</value>
  </data>
</root>